services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${FRONT_PORT}
    restart: unless-stopped
    command: ["npm", "run", "start"]
    env_file:
      - ./.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nest-backend
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
      - PORT=${BACK_PORT}
    env_file:
      - ./.env
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - ./frontend/public/uploads:/app/uploads

  database:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"

volumes:
  pgdata:
