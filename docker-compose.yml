services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${FRONT_PORT}
    restart: unless-stopped
    command: ["npm", "run", "start"]
    env_file:
      - ./.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nest-backend
    ports:
      - "${BACK_PORT_PROD}:${BACK_PORT_PROD}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST_PROD}:${DB_PORT}/${DB_DATABASE}
      - PORT=${BACK_PORT_PROD}
    env_file:
      - ./.env
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - ./frontend/public/uploads:/app/uploads
      - ./backend/src/payment/logs:/app/logs

  database:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"

  model:
    build:
      context: ./data
      dockerfile: Dockerfile
    container_name: fastapi-backend
    ports:
      - "${MODEL_PORT}:${MODEL_PORT}"
    environment:
      - PORT=${MODEL_PORT}
      - HOST=${MODEL_HOST_PROD}
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - .:/app

volumes:
  pgdata:
